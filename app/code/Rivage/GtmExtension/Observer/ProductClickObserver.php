<?php
/**
 * Copyright Â© Rivage(info@rivage.com)
 * See COPYING.txt for license details.
 */

namespace Rivage\GtmExtension\Observer;

use Magento\Framework\Event\ObserverInterface;

class ProductClickObserver implements ObserverInterface
{
    /**
     * @var \Rivage\GtmExtension\Helper\Data
     */
    protected $helper;

    /**
     * @param \Rivage\GtmExtension\Helper\Data $helper
     */
    public function __construct(
        \Rivage\GtmExtension\Helper\Data $helper
    ) {
        $this->helper = $helper;
    }

    /**
     * Observer For ProductClickObserver
     *
     * @param \Magento\Framework\Event\Observer $observer
     * @return self
     */
    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        $clickHtmlData = $observer->getHtml();
        $product = $observer->getPproduct();
        $productIndex = $observer->getIndex();
        $productListValue = $observer->getList();
        $productListId = $observer->getListId();

        // Get the existing HTML from the click HTML data object.
        $html = $clickHtmlData->getHtml();

        // Append the custom HTML generated by the helper to the existing HTML.
        $customHtml = $this->helper->getProductClickJsonData(
            $product,
            $productIndex,
            $productListValue,
            $productListId
        );
        $html .= $customHtml;

        // Set the updated HTML back to the click HTML data object.
        $clickHtmlData->setHtml($html);

        return $this;
    }
}
