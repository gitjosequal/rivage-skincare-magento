<?php /** * Mageplaza * * NOTICE OF LICENSE * * This source file is subject to the Mageplaza.com license that is * available through the world-wide-web at this URL: * https://www.mageplaza.com/LICENSE.txt * * DISCLAIMER * * Do not edit or add to this file if you wish to upgrade this extension to newer * version in the future. * * @category Mageplaza * @package Mageplaza_AjaxLayer * @copyright Copyright (c) Mageplaza (http://www.mageplaza.com/) * @license https://www.mageplaza.com/LICENSE.txt */ use Hyva\Theme\ViewModel\Wishlist; /** @var \Hyva\Theme\Model\ViewModelRegistry $viewModels */ /** @var \Magento\Framework\Escaper $escaper */ /** @var Wishlist $wishlistViewModel */ $wishlistViewModel = $viewModels->require(Wishlist::class); ?> <?php if ($wishlistViewModel->isEnabled()): ?> <?php $helper = $this->helper(\Mageplaza\AjaxLayer\Helper\Data::class); $filters = $block->getFilters(); $layerConfig = $helper->getLayerConfiguration($filters); ?> <script>
        function initWishlist() {
            return {
                addToWishlist(productId) {
                    const formKey = hyva.getFormKey();
                    const postUrl = `${BASE_URL}wishlist/index/add/`;
                    showLoader();
                    fetch(postUrl, {
                        "headers": {
                            "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                        },
                        "body": `form_key=${formKey}&product=${productId}&uenc=${hyva.getUenc()}`,
                        "method": "POST",
                        "mode": "cors",
                        "credentials": "include"
                    }).then(function (response) {
                        let layerConfig = <?= /** @noEscape */ $layerConfig ?>;

                        if (response.redirected) {
                            if(!layerConfig?.isCustomerLoggedIn) {
                                window.location.href = response.url;
                            } else {
                                window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
                            }
                        } else if (response.ok) {
                            return response.json();
                        } else {
                            typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                                [{
                                    type: "warning",
                                    text: "<?= $escaper->escapeHtml(__('Could not add item to wishlist.')) ?>"
                                }], 5000
                            );
                        }
                        hideLoader();
                    }).then(function (response) {
                        if (!response) { return }
                        typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                            [{
                                type: (response.success) ? "success" : "error",
                                text: (response.success)
                                    ? "<?= $escaper->escapeHtml(__(
                                        "%1 has been added to your Wish List.",
                                        __("Product")
                                    )) ?>"
                                    : response.error_message
                            }], 5000
                        );
                        window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
                        hideLoader();
                    }).catch(function (error) {
                        typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                            [{
                                type: "error",
                                text: error
                            }], 5000
                        );
                        hideLoader();
                    });
                }
            }
        }
        function showLoader() {
            const loader = document.querySelector('.mplayer-loader');
            if (loader) {
                loader.style.display='';
            }
        }

        function hideLoader() {
            const loader = document.querySelector('.mplayer-loader');
            if (loader) {
                loader.style.display = 'none';
            }
        }</script><?php endif; ?>